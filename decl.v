// Все регистры в процессоре
// ---------------------------------------------------------------------
reg [ 7:0]  A           = 8'h00;    // Аккумулятор
reg [ 7:0]  X           = 8'hF0;    // Индексный X
reg [ 7:0]  Y           = 8'hFF;    // Индексный Y
reg [ 7:0]  S           = 8'h00;    // Стек
reg [ 7:0]  P           = 8'h00;    // Флаги
reg [15:0]  pc          = 16'h0000; // Счетчик инструкции
// ---------------------------------------------------------------------
reg [ 4:0]  T           = 5'h0;     // 0..31 Текущая линия выполнения на верилог
reg         sel         = 1'b0;     // Выбор источника адреса в память
reg [15:0]  cursor      = 16'h0000; // Указатель в память
reg [ 7:0]  opcode      = 8'h00;    // Сохраненный опкод
reg [ 7:0]  tmpb        = 8'h00;    // Временный байт
// ---------------------------------------------------------------------
wire [ 7:0] azpx        = i_data + X;
wire [ 7:0] azpy        = i_data + Y;
wire [ 7:0] cursor8     = cursor + 1'b1;
// ---------------------------------------------------------------------
reg  [ 3:0] alu         = 4'h0;     // Выбор АЛУ
reg  [ 1:0] src         = 1'b0;     // 0-Acc, 1-X, 2-Y, 3-S
reg  [ 1:0] dst         = 1'b0;     // 0-Mem, 1-X, 2-Y, 3-S
wire [ 7:0] src_mux     = src == 2'b00 ? A :
                          src == 2'b01 ? X :
                          src == 2'b10 ? Y : S;
wire [ 7:0] dst_mux     = dst == 2'b00 ? i_data :
                          dst == 2'b01 ? X :
                          dst == 2'b10 ? Y : S;
wire [ 7:0] alu_r;
wire [ 7:0] alu_p;
// ---------------------------------------------------------------------

initial begin we = 1'b0; end

localparam
    RST     = 0,
    ZP      = 1,
    ZPX     = 2,
    ZPY     = 3,
    ABS     = 4,  // 5
    ABX     = 6,  // 7
    ABY     = 8,  // 9
    NDX     = 10, // 11,12
    NDY     = 13, // 14,15
    REL     = 15,
    IMM     = 16,
    IMP     = 17, // Исполнение инструкции
    TICK1   = 18;

// ---------------------------------------------------------------------
// Арифметико-логичекое устройство
// ---------------------------------------------------------------------

alu ALUModule
(
    .ALU    (alu),
    .A      (src_mux),
    .B      (dst_mux),
    .P      (P),
    .opcode (opcode),
    .AR     (alu_r),
    .AF     (alu_p)
);
